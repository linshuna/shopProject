
//左侧固定右侧自适应（lay-cont要在lay-r 里面）
@mixin layout-l($layWidth: .3rem,$layCon: .3rem){
    .lay-fixed {
        float:left; width:$layWidth;  position:relative;
    }
    .lay-body {
        float:right; margin-left:-$layWidth; width:$layCon; position:relative;
    }
	//laycont在laybody里面
    .lay-cont {
        margin-left: $layCon; 
    }
}

//右侧固定，左侧自适应
@mixin layout-r($layWidth: .3rem,$layCon: .3rem){
    .lay-fixed {
        float: right; 
        width: $layWidth;  
        position: relative;
    }
    .lay-body {
        float: left; 
        margin-right: -$layWidth;
        width: 100%;
        position: relative;
    }
    .lay-cont {
        margin-right:$layCon; 
    }
}
//固定布局
@mixin flex { 
    display: flex;
    justify-content: space-between;
    align-items: center;
}
//设置间距可以动态设置
@mixin set-margin-l($left: .2rem) {
    margin-left: $left;
}
@mixin set-margin-r($right: .2rem) {
    margin-left: $right;
}
@mixin set-padding-l($left: .2rem) {
    padding-left: $left;
}
@mixin set-padding-r($right: .2rem) {
    padding-right: $right;
}
//设置图片和span垂直居中
@mixin vertical($type: middle) {
    vertical-align: $type;
}

@mixin text-overflow-line-clamp($line: 2){
    text-overflow: ellipsis;
    display: -webkit-box; /** 对象作为伸缩盒子模型显示 **/
    -webkit-box-orient: vertical; /** 设置或检索伸缩盒对象的子元素的排列方式 **/
    -webkit-line-clamp: $line; /** 显示的行数 **/
    overflow: hidden;  /** 隐藏超出的内容 **/
}
@mixin text-overflow(){
    text-overflow: ellipsis;
    overflow: hidden;  /** 隐藏超出的内容 **/
    white-space: nowrap;
}

@mixin set-padding($padding-size: .1rem) {
    padding: $padding-size;
}